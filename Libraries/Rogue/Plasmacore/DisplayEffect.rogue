module Plasmacore
$include "ProgressFn.rogue"

class DisplayEffect
  PROPERTIES
    next_effect : DisplayEffect

  METHODS
    method handle( e:KeyEvent )
      Display.screen.state.handle( e )

    method handle( e:PointerEvent )
      Display.screen.state.handle( e )

    method handle( e:ScrollEvent )
      Display.screen.state.handle( e )

    method handle( e:TextEvent )
      Display.screen.state.handle( e )

    method handle_draw
      Display.screen.state.handle_draw

    method handle_resize
      Display.screen.state.handle_resize

    method handle_update
      Display.screen.state.handle_update

    method is_finished->Logical
      return true

    method operator+( next:DisplayEffect )->DisplayEffect
      local cur = this
      while (cur.next_effect) cur = cur.next_effect
      cur.next_effect = next
      return this

    method update->DisplayEffect
      if (not is_finished) return this
      if (next_effect)
        local result = next_effect
        next_effect = null
        return result
      endIf
      return NoEffect
endClass

class NoEffect : DisplayEffect [singleton]
endClass

class TransitionInfo( t:Real64, color:Color ) [compound]
  METHODS
    method is_transitioning_in->Logical
      return (t >= 0.5)

    method is_transitioning_out->Logical
      return (t < 0.5)

    method eased_progress( fn_out=ProgressFn.QUADRATIC_OUT:ProgressFnType, fn_in=ProgressFn.QUADRATIC_IN:ProgressFnType )->Real64
      if (t < 0.5) return fn_out( t*2 )
      else         return fn_in( 2*t-2 )

    method linear_progress->Real64
      if (t < 0.5) return t * 2
      else         return 2 - t*2
endClass

class TransitionEffect : DisplayEffect
  METHODS
    # Suppresses all input events
    method handle( e:KeyEvent )
      noAction

    method handle( e:PointerEvent )
      noAction

    method handle( e:ScrollEvent )
      noAction

    method handle( e:TextEvent )
      noAction
endClass

class BaseFadeDisplayEffect : TransitionEffect
  PROPERTIES
    duration     : Real64
    color        : Color
    fading_in    = false
    progress     = 0.0
    delta        : Real64

  METHODS
    method init( duration=0.5, color=Color.BLACK )
      delta = 1.0 / (duration * 60.0)
      Display.effect += this

    method handle_draw
      Display.screen.state.on_transition_before_draw( TransitionInfo(progress,color) )
      Display.screen.state.handle_draw
      Display.screen.state.on_transition_after_draw( TransitionInfo(progress,color) )

    method is_finished->Logical
      return (progress == 1.0)

    method on_fade_out_finished
      noAction

    method update->DisplayEffect
      progress = (progress + delta).clamped_high( 1.0 )
      if (not fading_in)
        if (progress >= 0.5)
          fading_in = true
          on_fade_out_finished
        endIf
      endIf

      return prior.update
endClass

class FadeTo : BaseFadeDisplayEffect
  PROPERTIES
    to_screen : Screen
    to_state  : ScreenState

  METHODS
    method init( to_screen, duration=0.5, color=Color.BLACK )
      prior.init( duration, color )

    method init( to_state, duration=0.5, color=Color.BLACK )
      prior.init( duration, color )

    method handle_resize
      Display.screen.state.handle_resize
      if (to_screen) to_screen.state.handle_resize

    method on_fade_out_finished
      if (to_screen) Display.screen.state.change_screen( to_screen )
      else           Display.screen.state.change_state( to_state )

endClass

class FadeToPushState : FadeTo
  METHODS
    method init( to_state, duration=0.5, color=Color.BLACK )
      prior.init( to_state, duration, color )

    method on_fade_out_finished
      Display.screen.state.push_state( to_state )
endClass

class FadeToExitState : BaseFadeDisplayEffect
  METHODS
    method on_fade_out_finished
      Display.screen.state.exit_state
endClass

